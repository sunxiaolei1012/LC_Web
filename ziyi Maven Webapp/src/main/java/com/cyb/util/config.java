package com.cyb.util;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.atgeretg.serialport.ui.Read_Card;

/**
 * 一些常量配置
 * @author 陈玉博
 * @date 2018年9月16日下午2:59:35
 */
public class config {
	
	public static final String KEY = "123";

	
	public static final String ADD_USER_ERROR_MSG = "该用户已存在"; 
	public static final String ADD_USER_RIGHT_MSG = "添加成功"; 
	public static final String ADD_ERROR_MSG = "添加失败"; 
	public static final String XIU_USER_RIGHT_MSG = "修改成功"; 
	public static final String XIU_USER_ERROR_MSG = "修改失败"; 
	public static final String ADD_CARD_TYPE_ERROR_MSG = "该卡类型已存在"; 
	public static final String ADD_SELLING_TYPE_ERROR_MSG = "该商品类型已存在"; 
	
	public static final String ORDER_NULL_ERROR_MSG="订单不存在";
	public static final String SELLING_NULL_ERROR_MSG="商品不存在";
	public static final String SELLING_NULL_ERROR_MSG_FALSE="该商品不在订单中";
	
	public static final String READ_CARD_TEXT="读卡失败";
	public static final String READ_CARD_TEXT_OLD="老卡不能写入";
	public static final String READ_CARD_TEXT_NEW="新卡不用激活";
	public static final String READ_CARD_NULL="该卡号已存在";
	public static final String READ_CARD_OLD_FALSE="该卡未激活，请先激活";
	public static final String READ_CARD_NEW_NULL="新卡，未写入数据";
	
	public static final String READ_CARD_OLD_NULL="无效卡或未激活，请激活后重试";
	
	public static final String YUDING_TRUE="预定成功";
	public static final String YUDING_FLASE="预定失败";
	public static final String NUMBER_NULL="订单编号为空";
	public static final String NUMBER_FALSE="无效卡";
	
	public static final String OLD_JI_CARD="激活成功";

	
	public static final String XU_ERROR = "未找到可续杯商品";
	
	public static final String PAY_NUMBER_DEL= "订单不存在或删除";
	public static final String PAY_NUMBER_TRUE= "订单已付款";
	public static final String PAY_ERROR= "付款失败，请查询日志信息";
	
	public static final String CARD_PRICE_FALSE= "卡中余额不足";
	public static final String CARD_PRICE_ADD_NULL="充值金额不为空";
	public static final String CARD_NULL="会员卡为空";
	public static final String CARD_PRICE_ADD_TRUE= "充值成功";
	
	public static final String MYSQL_ERROR= "数据库连接有误";
	
	public static final String MYSQL_ERROR_CARD_OLD= "数据库中未读到老卡信息，请手动添加卡信息";

	public static final String CARD_NUMBER_NULL="卡编号为空";
	public static final String CARD_TYPE_NULL="卡类型为空";
	public static final String CARD_OPEN_TRUE="开卡成功";
	
	//认证
	public static final byte[] CARD_LOGIN = new byte[]{(byte) 0xAA,(byte) 0xB9,0x00,0x05,(byte) 0x80,0x00,0x00,0x00,0x00,(byte) 0x96};
	//读出密码
	public static final byte[] READ_PASSWORD = new byte[]{(byte) 0xAA,(byte) 0xB7,0x00,0x07,(byte) 0x80,0x00,0x00,0x01,(byte) 0x82,0x00,0x03,0x1A};
	//密码比较
	public static final byte[] PASSWORD_COMPARE = new byte[]{(byte) 0xAA,(byte) 0xB5,0x00,0x08,(byte) 0x80,0x00,0x00,0x01,(byte) 0x82,0x11,0x11,0x11,0x05};
	//更改密码
	public static final byte[] UPDATE_PASSWORD = new byte[]{(byte) 0xAA,(byte) 0xB6,0x00,0x08,(byte) 0x80,0x00,0x00,0x01,(byte) 0x82,0x11,0x11,0x11,0x06};
	//蜂鸣
	public static final byte[] VIDEO = new byte[]{(byte) 0xAA,(byte) 0xB4,0x00,0x07,(byte) 0x80,0x00,0x00,0x00,0x00,0x00,0x14,(byte) 0x8D};
	//读卡1
	public static final byte[] READ_CARD_ONE = new byte[]{(byte) 0xAA,0x61,0x00,0x07,0x79,0x00,0x00,0x00,0x00,0x00,(byte) 0x90,0x25};
	//读卡2
	public static final byte[] READ_CARD_TWO = new byte[]{(byte) 0xAA, 0x61 ,0x00 ,0x07, 0x79, 0x00, 0x00,0x00, (byte) 0x90,0x00 ,0x70, 0x55};
	//核对密码
	public static final byte[] CARD_PASSWORD_COMPARE = new byte[]{(byte) 0xAA,0x64,0x00,0x08,0x79,0x00,0x00,0x00,0x00,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,0x40};
	
	//统一写卡AA 60 00 95 79 00 00 00 20 FF FF FF FF 11 11 11 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 11 11 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 11 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 11 FF FF FF FF FF FF E8 
//	public static byte[] WHITE_CARD = new byte[]{(byte) 0xAA,(byte) 0x60,(byte) 0x00,(byte) 0x95,(byte) 0x79,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x20,
//			(byte) 0x63,(byte) 0x68,(byte) 0x65,(byte) 0x6e,(byte) 0x79,(byte) 0x75,(byte) 0x57,(byte) 0x6F,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,
//			(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF};
//	 ,(byte) 0xFF
	
	//统一
	public static byte[] WHITE_CARD = new byte[]{(byte) 0xAA,(byte) 0x60,(byte) 0x00,(byte) 0x95,(byte) 0x79,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x20,  //0-9
			(byte) 0x63,(byte) 0x68,(byte) 0x65,(byte) 0x6e,(byte) 0x79,(byte) 0x75,(byte) 0x57,(byte) 0x6F, //10-17  //8位校验位
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,  //6位编号
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
			(byte) 0xFF,(byte) 0xE8};
	//
	public static byte[] WHITE= new byte[]{
			(byte) 0xAA,(byte) 0x60,(byte) 0x00,(byte) 0x95,(byte) 0x79,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x20,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0x11,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x00
			
	};
	
	
	
//	public static byte[] WHITE = new byte[]{(byte) 0xAA,(byte) 0x60,(byte) 0x00,(byte) 0x06,(byte) 0x79,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x20,(byte) 0x11,(byte) 0x84};
	
	//保存读卡信息
	public static Map<Integer,Read_Card> READ_CARD_MAP = new HashMap<Integer , Read_Card>();
	/**
	 * 会员卡每页显示条数
	 */
	public static final int PAGE_CARD_SHOW_NUMBER = 15;
	
	/**
	 * 用来保存读卡信息
	 */
	public static boolean BOOL = false;
	/**
	 * 用来保存读卡时间
	 */
//	public static Date TIME = null;
	/**
	 * 用来保存读到的卡
	 */
	public static List<Byte> READ_CARD = new ArrayList<Byte>();
	
}
